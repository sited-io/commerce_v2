// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file sited_io/commerce/v2/commerce_service.proto (package sited_io.commerce.v2, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Offer, Offer_Details, OfferType, PriceType } from "./offer_pb.js";
import { PaginationRequest, PaginationResponse } from "../../query/v1/query_pb.js";
import { OffersFilter, OffersOrderBy } from "./query_pb.js";
import { Price } from "../../price/v1/price_pb.js";
import { CountryCode } from "../../country/v1/country_pb.js";
import { Shop } from "./shop_pb.js";

/**
 * @generated from message sited_io.commerce.v2.CreateOfferRequest
 */
export class CreateOfferRequest extends Message<CreateOfferRequest> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer.Details details = 1;
   */
  details?: Offer_Details;

  /**
   * @generated from field: sited_io.commerce.v2.OfferType offer_type = 2;
   */
  offerType?: OfferType;

  constructor(data?: PartialMessage<CreateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "details", kind: "message", T: Offer_Details },
    { no: 2, name: "offer_type", kind: "message", T: OfferType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferRequest {
    return new CreateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined, b: CreateOfferRequest | PlainMessage<CreateOfferRequest> | undefined): boolean {
    return proto3.util.equals(CreateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateOfferResponse
 */
export class CreateOfferResponse extends Message<CreateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<CreateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateOfferResponse {
    return new CreateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined, b: CreateOfferResponse | PlainMessage<CreateOfferResponse> | undefined): boolean {
    return proto3.util.equals(CreateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOfferRequest
 */
export class GetOfferRequest extends Message<GetOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<GetOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferRequest {
    return new GetOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined, b: GetOfferRequest | PlainMessage<GetOfferRequest> | undefined): boolean {
    return proto3.util.equals(GetOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetOfferResponse
 */
export class GetOfferResponse extends Message<GetOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<GetOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetOfferResponse {
    return new GetOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined, b: GetOfferResponse | PlainMessage<GetOfferResponse> | undefined): boolean {
    return proto3.util.equals(GetOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOffersRequest
 */
export class ListOffersRequest extends Message<ListOffersRequest> {
  /**
   * @generated from field: optional string owner = 1;
   */
  owner?: string;

  /**
   * @generated from field: optional string shop_id = 2;
   */
  shopId?: string;

  /**
   * @generated from field: optional sited_io.query.v1.PaginationRequest pagination = 3;
   */
  pagination?: PaginationRequest;

  /**
   * @generated from field: optional sited_io.commerce.v2.OffersOrderBy order_by = 4;
   */
  orderBy?: OffersOrderBy;

  /**
   * @generated from field: optional sited_io.commerce.v2.OffersFilter filter = 5;
   */
  filter?: OffersFilter;

  constructor(data?: PartialMessage<ListOffersRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOffersRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "owner", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 3, name: "pagination", kind: "message", T: PaginationRequest, opt: true },
    { no: 4, name: "order_by", kind: "message", T: OffersOrderBy, opt: true },
    { no: 5, name: "filter", kind: "message", T: OffersFilter, opt: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersRequest {
    return new ListOffersRequest().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined, b: ListOffersRequest | PlainMessage<ListOffersRequest> | undefined): boolean {
    return proto3.util.equals(ListOffersRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.ListOffersResponse
 */
export class ListOffersResponse extends Message<ListOffersResponse> {
  /**
   * @generated from field: repeated sited_io.commerce.v2.Offer offers = 1;
   */
  offers: Offer[] = [];

  /**
   * @generated from field: sited_io.query.v1.PaginationResponse pagination = 2;
   */
  pagination?: PaginationResponse;

  constructor(data?: PartialMessage<ListOffersResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.ListOffersResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offers", kind: "message", T: Offer, repeated: true },
    { no: 2, name: "pagination", kind: "message", T: PaginationResponse },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListOffersResponse {
    return new ListOffersResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined, b: ListOffersResponse | PlainMessage<ListOffersResponse> | undefined): boolean {
    return proto3.util.equals(ListOffersResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateOfferRequest
 */
export class UpdateOfferRequest extends Message<UpdateOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.commerce.v2.Offer.Details details = 2;
   */
  details?: Offer_Details;

  /**
   * @generated from field: sited_io.commerce.v2.OfferType offer_type = 3;
   */
  offerType?: OfferType;

  constructor(data?: PartialMessage<UpdateOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: Offer_Details },
    { no: 3, name: "offer_type", kind: "message", T: OfferType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferRequest {
    return new UpdateOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined, b: UpdateOfferRequest | PlainMessage<UpdateOfferRequest> | undefined): boolean {
    return proto3.util.equals(UpdateOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.UpdateOfferResponse
 */
export class UpdateOfferResponse extends Message<UpdateOfferResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Offer offer = 1;
   */
  offer?: Offer;

  constructor(data?: PartialMessage<UpdateOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.UpdateOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer", kind: "message", T: Offer },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateOfferResponse {
    return new UpdateOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined, b: UpdateOfferResponse | PlainMessage<UpdateOfferResponse> | undefined): boolean {
    return proto3.util.equals(UpdateOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteOfferRequest
 */
export class DeleteOfferRequest extends Message<DeleteOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<DeleteOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferRequest {
    return new DeleteOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined, b: DeleteOfferRequest | PlainMessage<DeleteOfferRequest> | undefined): boolean {
    return proto3.util.equals(DeleteOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteOfferResponse
 */
export class DeleteOfferResponse extends Message<DeleteOfferResponse> {
  constructor(data?: PartialMessage<DeleteOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteOfferResponse {
    return new DeleteOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined, b: DeleteOfferResponse | PlainMessage<DeleteOfferResponse> | undefined): boolean {
    return proto3.util.equals(DeleteOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutPriceToOfferRequest
 */
export class PutPriceToOfferRequest extends Message<PutPriceToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.price.v1.Price price = 2;
   */
  price?: Price;

  /**
   * @generated from field: sited_io.commerce.v2.PriceType price_type = 3;
   */
  priceType?: PriceType;

  constructor(data?: PartialMessage<PutPriceToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutPriceToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "message", T: Price },
    { no: 3, name: "price_type", kind: "message", T: PriceType },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferRequest {
    return new PutPriceToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined, b: PutPriceToOfferRequest | PlainMessage<PutPriceToOfferRequest> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.PutPriceToOfferResponse
 */
export class PutPriceToOfferResponse extends Message<PutPriceToOfferResponse> {
  constructor(data?: PartialMessage<PutPriceToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.PutPriceToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PutPriceToOfferResponse {
    return new PutPriceToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined, b: PutPriceToOfferResponse | PlainMessage<PutPriceToOfferResponse> | undefined): boolean {
    return proto3.util.equals(PutPriceToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemovePriceFromOfferRequest
 */
export class RemovePriceFromOfferRequest extends Message<RemovePriceFromOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemovePriceFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemovePriceFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferRequest {
    return new RemovePriceFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined, b: RemovePriceFromOfferRequest | PlainMessage<RemovePriceFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemovePriceFromOfferResponse
 */
export class RemovePriceFromOfferResponse extends Message<RemovePriceFromOfferResponse> {
  constructor(data?: PartialMessage<RemovePriceFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemovePriceFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemovePriceFromOfferResponse {
    return new RemovePriceFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined, b: RemovePriceFromOfferResponse | PlainMessage<RemovePriceFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemovePriceFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddShippingRateToOfferRequest
 */
export class AddShippingRateToOfferRequest extends Message<AddShippingRateToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: sited_io.price.v1.Price price = 2;
   */
  price?: Price;

  /**
   * @generated from field: bool all_countries = 3;
   */
  allCountries = false;

  /**
   * @generated from field: repeated sited_io.country.v1.CountryCode specific_countries = 4;
   */
  specificCountries: CountryCode[] = [];

  constructor(data?: PartialMessage<AddShippingRateToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddShippingRateToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "price", kind: "message", T: Price },
    { no: 3, name: "all_countries", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "specific_countries", kind: "enum", T: proto3.getEnumType(CountryCode), repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddShippingRateToOfferRequest {
    return new AddShippingRateToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddShippingRateToOfferRequest {
    return new AddShippingRateToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddShippingRateToOfferRequest {
    return new AddShippingRateToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddShippingRateToOfferRequest | PlainMessage<AddShippingRateToOfferRequest> | undefined, b: AddShippingRateToOfferRequest | PlainMessage<AddShippingRateToOfferRequest> | undefined): boolean {
    return proto3.util.equals(AddShippingRateToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddShippingRateToOfferResponse
 */
export class AddShippingRateToOfferResponse extends Message<AddShippingRateToOfferResponse> {
  constructor(data?: PartialMessage<AddShippingRateToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddShippingRateToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddShippingRateToOfferResponse {
    return new AddShippingRateToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddShippingRateToOfferResponse {
    return new AddShippingRateToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddShippingRateToOfferResponse {
    return new AddShippingRateToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddShippingRateToOfferResponse | PlainMessage<AddShippingRateToOfferResponse> | undefined, b: AddShippingRateToOfferResponse | PlainMessage<AddShippingRateToOfferResponse> | undefined): boolean {
    return proto3.util.equals(AddShippingRateToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveShippingRateFromOfferRequest
 */
export class RemoveShippingRateFromOfferRequest extends Message<RemoveShippingRateFromOfferRequest> {
  /**
   * @generated from field: string shipping_rate_id = 1;
   */
  shippingRateId = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemoveShippingRateFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveShippingRateFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shipping_rate_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferRequest {
    return new RemoveShippingRateFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveShippingRateFromOfferRequest | PlainMessage<RemoveShippingRateFromOfferRequest> | undefined, b: RemoveShippingRateFromOfferRequest | PlainMessage<RemoveShippingRateFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveShippingRateFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveShippingRateFromOfferResponse
 */
export class RemoveShippingRateFromOfferResponse extends Message<RemoveShippingRateFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveShippingRateFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveShippingRateFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveShippingRateFromOfferResponse {
    return new RemoveShippingRateFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveShippingRateFromOfferResponse | PlainMessage<RemoveShippingRateFromOfferResponse> | undefined, b: RemoveShippingRateFromOfferResponse | PlainMessage<RemoveShippingRateFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveShippingRateFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddImageToOfferRequest
 */
export class AddImageToOfferRequest extends Message<AddImageToOfferRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string file_id = 2;
   */
  fileId = "";

  /**
   * @generated from field: int32 ordering = 3;
   */
  ordering = 0;

  constructor(data?: PartialMessage<AddImageToOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddImageToOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "file_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "ordering", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferRequest {
    return new AddImageToOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined, b: AddImageToOfferRequest | PlainMessage<AddImageToOfferRequest> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddImageToOfferResponse
 */
export class AddImageToOfferResponse extends Message<AddImageToOfferResponse> {
  constructor(data?: PartialMessage<AddImageToOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddImageToOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddImageToOfferResponse {
    return new AddImageToOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined, b: AddImageToOfferResponse | PlainMessage<AddImageToOfferResponse> | undefined): boolean {
    return proto3.util.equals(AddImageToOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveImageFromOfferRequest
 */
export class RemoveImageFromOfferRequest extends Message<RemoveImageFromOfferRequest> {
  /**
   * @generated from field: string offer_image_id = 1;
   */
  offerImageId = "";

  /**
   * @generated from field: string offer_id = 2;
   */
  offerId = "";

  constructor(data?: PartialMessage<RemoveImageFromOfferRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveImageFromOfferRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_image_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferRequest {
    return new RemoveImageFromOfferRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined, b: RemoveImageFromOfferRequest | PlainMessage<RemoveImageFromOfferRequest> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveImageFromOfferResponse
 */
export class RemoveImageFromOfferResponse extends Message<RemoveImageFromOfferResponse> {
  constructor(data?: PartialMessage<RemoveImageFromOfferResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveImageFromOfferResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveImageFromOfferResponse {
    return new RemoveImageFromOfferResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined, b: RemoveImageFromOfferResponse | PlainMessage<RemoveImageFromOfferResponse> | undefined): boolean {
    return proto3.util.equals(RemoveImageFromOfferResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateShopRequest
 */
export class CreateShopRequest extends Message<CreateShopRequest> {
  /**
   * @generated from field: string website_id = 1;
   */
  websiteId = "";

  constructor(data?: PartialMessage<CreateShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "website_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShopRequest {
    return new CreateShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShopRequest | PlainMessage<CreateShopRequest> | undefined, b: CreateShopRequest | PlainMessage<CreateShopRequest> | undefined): boolean {
    return proto3.util.equals(CreateShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.CreateShopResponse
 */
export class CreateShopResponse extends Message<CreateShopResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Shop shop = 1;
   */
  shop?: Shop;

  constructor(data?: PartialMessage<CreateShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.CreateShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop", kind: "message", T: Shop },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateShopResponse {
    return new CreateShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreateShopResponse | PlainMessage<CreateShopResponse> | undefined, b: CreateShopResponse | PlainMessage<CreateShopResponse> | undefined): boolean {
    return proto3.util.equals(CreateShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetShopRequest
 */
export class GetShopRequest extends Message<GetShopRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<GetShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShopRequest {
    return new GetShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShopRequest {
    return new GetShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShopRequest {
    return new GetShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetShopRequest | PlainMessage<GetShopRequest> | undefined, b: GetShopRequest | PlainMessage<GetShopRequest> | undefined): boolean {
    return proto3.util.equals(GetShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.GetShopResponse
 */
export class GetShopResponse extends Message<GetShopResponse> {
  /**
   * @generated from field: sited_io.commerce.v2.Shop shop = 1;
   */
  shop?: Shop;

  constructor(data?: PartialMessage<GetShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.GetShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop", kind: "message", T: Shop },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetShopResponse {
    return new GetShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetShopResponse {
    return new GetShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetShopResponse {
    return new GetShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetShopResponse | PlainMessage<GetShopResponse> | undefined, b: GetShopResponse | PlainMessage<GetShopResponse> | undefined): boolean {
    return proto3.util.equals(GetShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteShopRequest
 */
export class DeleteShopRequest extends Message<DeleteShopRequest> {
  /**
   * @generated from field: string shop_id = 1;
   */
  shopId = "";

  constructor(data?: PartialMessage<DeleteShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteShopRequest {
    return new DeleteShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteShopRequest | PlainMessage<DeleteShopRequest> | undefined, b: DeleteShopRequest | PlainMessage<DeleteShopRequest> | undefined): boolean {
    return proto3.util.equals(DeleteShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.DeleteShopResponse
 */
export class DeleteShopResponse extends Message<DeleteShopResponse> {
  constructor(data?: PartialMessage<DeleteShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.DeleteShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeleteShopResponse {
    return new DeleteShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: DeleteShopResponse | PlainMessage<DeleteShopResponse> | undefined, b: DeleteShopResponse | PlainMessage<DeleteShopResponse> | undefined): boolean {
    return proto3.util.equals(DeleteShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddOfferToShopRequest
 */
export class AddOfferToShopRequest extends Message<AddOfferToShopRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<AddOfferToShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddOfferToShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOfferToShopRequest {
    return new AddOfferToShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddOfferToShopRequest | PlainMessage<AddOfferToShopRequest> | undefined, b: AddOfferToShopRequest | PlainMessage<AddOfferToShopRequest> | undefined): boolean {
    return proto3.util.equals(AddOfferToShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.AddOfferToShopResponse
 */
export class AddOfferToShopResponse extends Message<AddOfferToShopResponse> {
  constructor(data?: PartialMessage<AddOfferToShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.AddOfferToShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddOfferToShopResponse {
    return new AddOfferToShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddOfferToShopResponse | PlainMessage<AddOfferToShopResponse> | undefined, b: AddOfferToShopResponse | PlainMessage<AddOfferToShopResponse> | undefined): boolean {
    return proto3.util.equals(AddOfferToShopResponse, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveOfferFromShopRequest
 */
export class RemoveOfferFromShopRequest extends Message<RemoveOfferFromShopRequest> {
  /**
   * @generated from field: string offer_id = 1;
   */
  offerId = "";

  /**
   * @generated from field: string shop_id = 2;
   */
  shopId = "";

  constructor(data?: PartialMessage<RemoveOfferFromShopRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveOfferFromShopRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "offer_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "shop_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOfferFromShopRequest {
    return new RemoveOfferFromShopRequest().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOfferFromShopRequest | PlainMessage<RemoveOfferFromShopRequest> | undefined, b: RemoveOfferFromShopRequest | PlainMessage<RemoveOfferFromShopRequest> | undefined): boolean {
    return proto3.util.equals(RemoveOfferFromShopRequest, a, b);
  }
}

/**
 * @generated from message sited_io.commerce.v2.RemoveOfferFromShopResponse
 */
export class RemoveOfferFromShopResponse extends Message<RemoveOfferFromShopResponse> {
  constructor(data?: PartialMessage<RemoveOfferFromShopResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "sited_io.commerce.v2.RemoveOfferFromShopResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RemoveOfferFromShopResponse {
    return new RemoveOfferFromShopResponse().fromJsonString(jsonString, options);
  }

  static equals(a: RemoveOfferFromShopResponse | PlainMessage<RemoveOfferFromShopResponse> | undefined, b: RemoveOfferFromShopResponse | PlainMessage<RemoveOfferFromShopResponse> | undefined): boolean {
    return proto3.util.equals(RemoveOfferFromShopResponse, a, b);
  }
}

